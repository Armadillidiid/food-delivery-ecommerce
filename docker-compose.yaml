version: "3.8"

services:
  app:
    build: .
    restart: always
    container_name: rumble
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
    volumes:
      - static-data:/app/staticfiles
      - media-data:/app/media
    command: >
      sh -c "python manage.py makemigrations mysite
             python manage.py migrate --noinput && 
             python manage.py collectstatic --noinput &&
             gunicorn setup.wsgi --bind 0.0.0.0:8000 --workers 1 --timeout 30"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=5432
      - MAP_API_KEY=${GOOGLE_MAP_API_KEY}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}
    depends_on:
      - db

  db:
    image: postgres:15.1-alpine
    container_name: rumble-db
    volumes:
      - db-data:/var/lib/postgresql/data/
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  web-server:
    build:
      context: ./nginx
      dockerfile: ./nginx/Dockerfile
      args:
        - IS_SSL_ACQUIRED=${IS_SSL_ACQUIRED}
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - APP_HOST=app
      - APP_PORT=8000
      - SERVER_NAME=${SERVER_NAME}
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
    volumes:
      - static-data:/app/staticfiles
      - media-data:/app/media
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - app

  certbot:
    image: certbot/certbot:v2.9.0
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 24h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

volumes:
  db-data:
  static-data:
  media-data:
