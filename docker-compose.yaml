version: "3.8"

services:
  app:
    build: .
    restart: always
    container_name: rumble
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:app-${IMAGE_TAG:-latest}
    volumes:
      - static-data:/app/staticfiles
      - media-data:/app/media
    command: >
      sh -c "python manage.py makemigrations mysite
             python manage.py migrate --noinput && 
             python manage.py collectstatic --noinput &&
             gunicorn setup.wsgi --bind 0.0.0.0:8000 --workers 1 --timeout 30"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=5432
      - MAP_API_KEY=${GOOGLE_MAP_API_KEY}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}
    depends_on:
      - db

  db:
    image: postgres:15.1-alpine
    container_name: rumble-db
    volumes:
      - db-data:/var/lib/postgresql/data/
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:nginx-${IMAGE_TAG:-latest}
    container_name: nginx
    environment:
      - APP_HOST=app
      - APP_PORT=8000
      - VIRTUAL_HOST=${SERVER_NAME}
      - LETSENCRYPT_HOST=${SERVER_NAME}
    volumes:
      - static-data:/app/staticfiles
      - media-data:/app/media
      - certs:/etc/nginx/certs
    depends_on:
      - app
      - nginx-proxy
      - nginx-proxy-gen
      - nginx-proxy-acme

  nginx-proxy-gen:
    image: nginxproxy/docker-gen
    container_name: nginx-proxy-gen
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
    command: >
      sh -c "mkdir -p /etc/docker-gen/templates/ &&
      curl https://raw.githubusercontent.com/nginx-proxy/nginx-proxy/main/nginx.tmpl > /etc/docker-gen/templates/nginx.tmpl &&
      docker-gen -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf"
    restart: always

  nginx-proxy:
    image: nginx
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
    depends_on:
      - nginx-proxy-gen

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - NGINX_DOCKER_GEN_CONTAINER=nginx-proxy-gen
      - DEFAULT_EMAIL=${CERTBOT_EMAIL}
    depends_on:
      - nginx-proxy
      - nginx-proxy-gen
    restart: always

volumes:
  db-data:
  static-data:
  media-data:
  conf:
  vhost:
  html:
  certs:
  acme:
