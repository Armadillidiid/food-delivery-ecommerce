name: CI/CD
on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: rumble
      IMAGE_TAG: ${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          MAP_API_KEY: ${{ secrets.GOOGLE_MAP_API_KEY }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: |
          docker compose build
          docker images
          docker tag food-delivery-ecommerce-app $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Debug variables
        run: |
          echo "Registry: ${{ steps.login-ecr.outputs.registry }}"
          echo "Repository: $ECR_REPOSITORY"
          echo "Image Tag: $IMAGE_TAG"
          echo "${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Set Docker Pull Image Environment Variable
        run: echo "DOCKER_PULL_IMAGE=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ secrets.IMAGE_TAG }}" >> $GITHUB_ENV

      - name: Debug Docker Pull Image Environment Variable
        run: echo "DOCKER_PULL_IMAGE - ${{ env.DOCKER_PULL_IMAGE }}"

      - name: Push artifact to server instance
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}
          SCRIPT_BEFORE: mkdir -p ${{ secrets.TARGET_DIR }}
          SCRIPT_AFTER: |
            echo "${{ steps.login-ecr.outputs.registry }}"
            aws ecr get-login-password --region "${{ secrets.AWS_REGION }}" | docker login --username AWS --password-stdin "${{ steps.login-ecr.outputs.registry }}"
            docker pull $DOCKER_PULL_IMAGE
            # docker stop rumble
            # docker rm rumble
            # cd "${{ secrets.TARGET_DIR }}" && docker compose up
